# The output shows the two clusters, two users, and three contexts

apiVersion: v1
clusters:
- cluster:
    certificate-authority: fake-ca-file
    server: https://1.2.3.4
  name: development
- cluster:
    insecure-skip-tls-verify: true
    server: https://5.6.7.8
  name: test
contexts:
- context:
    cluster: development
    namespace: frontend
    user: developer
  name: dev-frontend
- context:
    cluster: development
    namespace: storage
    user: developer
  name: dev-storage
- context:
    cluster: test
    namespace: default
    user: experimenter
  name: exp-test
current-context: ""
kind: Config
preferences: {}
users:
- name: developer
  user:
    client-certificate: fake-cert-file
    client-key: fake-key-file
- name: experimenter
  user:
    # Documentation note (this comment is NOT part of the command output).
    # Storing passwords in Kubernetes client config is risky.
    # A better alternative would be to use a credential plugin
    # and store the credentials separately.
    # See https://kubernetes.io/docs/reference/access-authn-authz/authentication/#client-go-credential-plugins
    password: some-password
    username: exp

    ----


apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: <BASE64_ENCODED_CA_CERT>
    server: https://controlplane:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
- context:
    cluster: kubernetes
    user: momo
  name: momo
current-context: momo
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: <BASE64_ENCODED_ADMIN_CERT>
    client-key-data: <BASE64_ENCODED_ADMIN_KEY>
- name: momo
  user:
    client-certificate: /root/momo.crt
    client-key: /root/momo.key


# cat /root/momo.crt | base64 -w 0
# cat /root/momo.key | base64 -w 0
# cat /etc/kubernetes/pki/ca.crt | base64 -w 0

# kubectl config current-context
# kubectl config use-context momo
# kubectl config view
# kubectl config get-contexts
# kubectl get pods --all-namespaces
# kubectl config get-contexts